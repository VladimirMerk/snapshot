#!/usr/bin/env node

const path = require('path');
const fs = require('fs-extra');
const {spawnSync} = require('child_process');
const electron = require('electron')
const electronLink = require('electron-link');
const chalk = require('chalk');
const yargs = require('yargs')
  .option('link', {
    alias: 'l',
    type: 'boolean',
    default: false,
    describe: 'Preprocess the script with electron-link first',
  })
const argv = yargs.argv

const {createSnapshot} = require('../build');

async function main() {
  const scriptPath = argv._[0];
  if (!scriptPath) {
    console.error('Please specify a main module path.\n');
    yargs.showHelp();
    process.exit(1);
  }

  let srcPath = scriptPath;
  if (argv.link) {
    const linkedPath = scriptPath.replace(/(\.js)?$/, '.linked.js');
    const cachePath = path.join(path.dirname(scriptPath), 'link-cache');
    await fs.mkdirs(cachePath);

    console.log(chalk.bold('Linking source from %s to %s.'), chalk.blue(scriptPath), chalk.blue(linkedPath));

    const linkResult = await electronLink({
      baseDirPath: path.dirname(scriptPath),
      mainPath: scriptPath,
      cachePath,
      shouldExcludeModule: modulePath => modulePath.endsWith('.node'),
    });
    await fs.writeFile(linkedPath, linkResult.snapshotScript, {encoding: 'utf8'});

    console.log(chalk.green('Linking complete.\n'));
    srcPath = linkedPath;
  }

  console.log(chalk.bold('Creating snapshot from %s.'), chalk.blue(srcPath));
  await createSnapshot(srcPath);
  console.log(chalk.bold.green('Snapshot created.\n'));

  console.log(chalk.bold('Loading and running snapshot in Electron.\n---\n'));
  spawnSync(electron, [path.join(__dirname, '../use.js'), `./${path.basename(scriptPath)}`], {encoding: 'utf8', stdio: 'inherit'});
}

main().then(
  () => process.exit(0),
  err => {
    console.error(err);
    process.exit(1);
  }
)
